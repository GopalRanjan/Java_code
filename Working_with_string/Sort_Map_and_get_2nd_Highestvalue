//output = e:1
//[l=2, e=1, h=1, o=1]

import java.util.*;

public class Main
{
	public static void main(String[] args) {
	    String s ="hello";
	    Map<Character,Integer> m = new HashMap<>();
	    for(char c : s.toCharArray())
	    {
	        if(m.containsKey(c)) m.put(c , m.getOrDefault(c, 0) + 1);
	        else m.put(c,1);
	       
	    }
	   List<Map.Entry<Character,Integer>> sb = new ArrayList<>(m.entrySet());
	   sb.sort((e1,e2) -> e2.getValue().compareTo(e1.getValue()));  //Ascending Order if reverse e1 &e2 it will be descending order
	   
	   if(sb.size() < 2) System.out.println("Not enough unique characters to determine the second-highest frequency"); //checking is length is too small
	   else {
	       Map.Entry<Character,Integer> ent = sb.get(1);
	       {
	           System.out.println(ent.getKey() +":" + ent.getValue());
	       }}
	    System.out.println(sb);
	}
}
